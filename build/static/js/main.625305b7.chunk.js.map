{"version":3,"sources":["transition/pop.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Information/Information.module.css","components/Title/Title.module.css","components/Notice/Notice.module.css","transition/slide.module.css","components/App/App.module.css","components/ContactForm/ContactForm.module.css","redux/selectors.js","redux/contacts/contactsTypes.js","redux/contacts/contactsActions.js","components/Information/Information.js","services/constants.js","services/localStorage.js","services/notification.js","components/ContactForm/ContactForm.js","components/ContactForm/ContactFormContainer.js","redux/filter/filterTypes.js","redux/filter/filterActions.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/ContactList/ContactList.js","components/ContactList/ContactListContainer.js","components/Title/Title.js","components/Notice/Notice.js","components/App/App.js","components/App/AppContainer.js","redux/contacts/contactsReducers.js","redux/filter/filterReducers.js","redux/store.js","index.js"],"names":["module","exports","getContacts","store","contacts","getFilter","filter","getFilterContacts","createSelector","contact","name","toLowerCase","includes","getContactsLength","length","getFilterContactsLength","addContact","createAction","types","removeContact","setContactsWithLocalStorage","Information","children","CSSTransition","in","timeout","unmountOnExit","classNames","pop","className","Styles","line","error","ALL_ID","nameId","shortid","generate","numberId","finedId","SET_ERROR","element","inputName","value","condition","number","saveToLocalStorage","key","localStorage","setItem","JSON","stringify","Error","notification","message","PNotify","text","animate","in_class","out_class","animate_speed","delay","INITIAL_STATE","ContactForm","state","handleChange","e","setState","target","handleSubmit","preventDefault","props","find","id","this","storage","items","getItem","parse","getToLocalStorage","isActive","IS_ACTIVE_BTN","btnStyles","disabled","button","section__contact","onSubmit","form__contact","htmlFor","form__title","autoComplete","form__input","onChange","type","placeholder","mt20","onClick","Component","mapDispatchToProps","contactsActions","connect","selectors","filterAction","Filter","input","section__filter","form__filter","tabIndex","formInputBtn","filterActions","ContactList","filterContacts","clickDelete","btnContact","currentTarget","removeWithLocalStorage","TransitionGroup","component","list","map","slide","item","n","Title","animation","size","styles","fontSize","padding","appear","wrapTitle","style","defaultProps","Notice","notice","notice__text","App","contactsLength","filterContactsLength","section","ContactFormContainer","FilterContainer","ContactListContainer","contactsReducers","createReducer","action","payload","filterReducers","configureStore","reducer","devTools","process","ReactDOM","render","AppContainer","document","getElementById"],"mappings":"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","file":"static/js/main.625305b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__2GBt9\",\"enterActive\":\"pop_enterActive__2v5iz\",\"exit\":\"pop_exit__12Fx2\",\"exitActive\":\"pop_exitActive__3DnSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__filter\":\"Filter_section__filter__Yjglz\",\"form__filter\":\"Filter_form__filter__1b8lm\",\"form__title\":\"Filter_form__title__1lCxs\",\"form__input-wrap\":\"Filter_form__input-wrap__3NnHi\",\"form__input\":\"Filter_form__input__3N_Ma\",\"formInputBtn\":\"Filter_formInputBtn__2AgSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3k68G\",\"item\":\"ContactList_item__39fM8\",\"item-wrap\":\"ContactList_item-wrap__2iqRd\",\"item-name\":\"ContactList_item-name__1ofqB\",\"item-number\":\"ContactList_item-number__u4ekR\",\"button\":\"ContactList_button__3k_BK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"Information_line__2qO2r\",\"error\":\"Information_error__35NGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapTitle\":\"Title_wrapTitle__35ZRL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notice\":\"Notice_notice__yCsZe\",\"notice__text\":\"Notice_notice__text__Qu4Tc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__1gso7\",\"enterActive\":\"slide_enterActive__1IhY9\",\"exit\":\"slide_exit__wOGyd\",\"exitActive\":\"slide_exitActive__1W9bQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__1s6jk\",\"wrapTitle\":\"App_wrapTitle__GwWHl\",\"title\":\"App_title__xdND2\",\"subTitle\":\"App_subTitle__1c_wM App_title__xdND2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__contact\":\"ContactForm_section__contact__2FDwo\",\"form__contact\":\"ContactForm_form__contact__GDhBM\",\"form__title\":\"ContactForm_form__title__32vCo\",\"mt20\":\"ContactForm_mt20__3Hl06\",\"form__input\":\"ContactForm_form__input__2VUgN\",\"button\":\"ContactForm_button__3vBUE\",\"disabled\":\"ContactForm_disabled__3KVGH ContactForm_button__3vBUE\"};","import { createSelector } from 'reselect';\n\nexport const getContacts = store => {\n  return store.contacts;\n};\nexport const getFilter = store => {\n  return store.filter;\n};\nexport const getFilterContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\nexport const getContactsLength = store => getContacts(store).length;\nexport const getFilterContactsLength = store => getFilterContacts(store).length;\n","export default {\n  ADD_CONTACT: 'contacts/ADD_CONTACT',\n  REMOVE_CONTACT: 'contacts/REMOVE_CONTACT',\n  SET_CONTACTS_WITH_LOCAL_STORAGE: 'contacts/SET_CONTACTS_WITH_LOCAL_STORAGE',\n};\n","import { createAction } from '@reduxjs/toolkit';\nimport types from './contactsTypes';\n\nexport const addContact = createAction(types.ADD_CONTACT);\nexport const removeContact = createAction(types.REMOVE_CONTACT);\nexport const setContactsWithLocalStorage = createAction(\n  types.SET_CONTACTS_WITH_LOCAL_STORAGE,\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Styles from './Information.module.css';\nimport pop from '../../transition/pop.module.css';\n\nconst Information = ({ children }) => {\n  return (\n    <CSSTransition in timeout={250} unmountOnExit classNames={pop}>\n      <div className={Styles.line}>\n        <span className={Styles.error}>{children}</span>\n      </div>\n    </CSSTransition>\n  );\n};\nInformation.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Information;\n","import shortid from 'shortid';\n\nexport const ALL_ID = {\n  nameId: shortid.generate(),\n  numberId: shortid.generate(),\n  finedId: shortid.generate(),\n};\nexport const MUTE_NUMBER = n => {\n  if (n.length === 10) {\n    return `(${n[0]}${n[1]}${n[2]}) ${n[3]}${n[4]}${n[5]} ${n[6]}${n[7]} ${n[8]}${n[9]}`;\n  }\n  return `+${n[0]} ${n[1]}(${n[2]}${n[3]}${n[4]}) ${n[5]}${n[6]}${n[7]} ${n[8]}${n[9]} ${n[10]}${n[11]}`;\n};\nexport const IS_ACTIVE_BTN = (name, number) => {\n  const boolName = name === false;\n  const boolNumber = number === false;\n  const isActive = boolName && boolNumber;\n  return !isActive;\n};\nexport function SET_ERROR(element, inputName, error) {\n  const { name, value } = element;\n  const condition = {\n    name: value.length >= 3,\n    number: value.length === 10 || value.length === 12,\n  };\n  if (name === inputName) {\n    if (condition[name]) {\n      return {\n        error: { ...error, [name]: false },\n      };\n    }\n    return {\n      error: { ...error, [name]: true },\n    };\n  }\n}\n","export const saveToLocalStorage = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getToLocalStorage = key => {\n  try {\n    const items = localStorage.getItem(key);\n    return items ? JSON.parse(items) : null;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import PNotify from 'pnotify/dist/es/PNotify';\n\nconst notification = name => {\n  const message = `${name} is already is contacts`;\n  PNotify.error({\n    text: message,\n    animate: {\n      animate: true,\n      in_class: 'bounceInDown',\n      out_class: 'bounceOutUp',\n    },\n    animate_speed: 250,\n    delay: 3000,\n  });\n};\nexport default notification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport shortid from 'shortid';\nimport Notification from '../Information/Information';\nimport { ALL_ID, SET_ERROR, IS_ACTIVE_BTN } from '../../services/constants';\nimport pop from '../../transition/pop.module.css';\nimport Styles from './ContactForm.module.css';\nimport {\n  saveToLocalStorage,\n  getToLocalStorage,\n} from '../../services/localStorage';\nimport notification from '../../services/notification';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n  error: {\n    name: null,\n    number: null,\n  },\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    setContactsWithLocalStorage: PropTypes.func.isRequired,\n    addContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  };\n\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  componentDidMount() {\n    const { setContactsWithLocalStorage } = this.props;\n    const storage = getToLocalStorage('contacts');\n    if (storage !== null) setContactsWithLocalStorage(storage);\n  }\n\n  handleChange = e => {\n    const { error } = this.state;\n    this.setState({ [e.target.name]: e.target.value });\n    this.setState(SET_ERROR(e.target, 'name', error));\n    this.setState(SET_ERROR(e.target, 'number', error));\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { addContact, contacts } = this.props;\n    const { name, number } = this.state;\n    const find = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (find) {\n      notification(name);\n      return;\n    }\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    addContact(contact);\n    saveToLocalStorage('contacts', [...contacts, contact]);\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { nameId, numberId } = ALL_ID;\n    const { name, number, error } = this.state;\n    const isActive = IS_ACTIVE_BTN(error.name, error.number);\n    const btnStyles = isActive ? Styles.disabled : Styles.button;\n    return (\n      <CSSTransition in timeout={250} unmountOnExit classNames={pop}>\n        <section className={Styles.section__contact}>\n          <form onSubmit={this.handleSubmit} className={Styles.form__contact}>\n            <div>\n              <label htmlFor={nameId} className={Styles.form__title}>\n                Name\n                <input\n                  id={nameId}\n                  autoComplete=\"off\"\n                  className={Styles.form__input}\n                  onChange={this.handleChange}\n                  value={name}\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Input name\"\n                />\n              </label>\n            </div>\n            <div>\n              {!!error.name && (\n                <Notification>Min length name three symbol.</Notification>\n              )}\n            </div>\n            <div className={Styles.mt20}>\n              <label htmlFor={numberId} className={Styles.form__title}>\n                Number\n                <input\n                  id={numberId}\n                  type=\"number\"\n                  autoComplete=\"off\"\n                  className={Styles.form__input}\n                  onChange={this.handleChange}\n                  value={number}\n                  name=\"number\"\n                  placeholder=\"phone 10 number\"\n                />\n              </label>\n            </div>\n            <div>\n              {!!error.number && (\n                <Notification>Length number 10 or 12 symbol.</Notification>\n              )}\n            </div>\n            <div className={Styles.mt20} />\n            <button\n              disabled={isActive}\n              onClick={this.handleSubmit}\n              type=\"submit\"\n              className={btnStyles}\n            >\n              Add contact\n            </button>\n          </form>\n        </section>\n      </CSSTransition>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts/contactsActions';\nimport * as selectors from '../../redux/selectors';\nimport ContactForm from './ContactForm';\n\nconst mapStateToProps = store => ({\n  contacts: selectors.getContacts(store),\n});\nconst mapDispatchToProps = {\n  setContactsWithLocalStorage: contactsActions.setContactsWithLocalStorage,\n  addContact: contactsActions.addContact,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","export default {\n  ON_CHANGE: 'filter/ON_CHANGE',\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nimport types from './filterTypes';\n\nconst filterAction = createAction(types.ON_CHANGE);\nexport default filterAction;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport pop from '../../transition/pop.module.css';\nimport Styles from './Filter.module.css';\nimport { ALL_ID } from '../../services/constants';\n\nconst Filter = ({ input, handleChange }) => {\n  const handleOnChange = e => {\n    handleChange(e.target.value);\n  };\n  const handleOnSubmit = e => {\n    e.preventDefault();\n  };\n  const handleOnClean = e => {\n    handleChange('');\n  };\n  return (\n    <CSSTransition in timeout={250} unmountOnExit classNames={pop}>\n      <section className={Styles.section__filter}>\n        <form className={Styles.form__filter} onSubmit={handleOnSubmit}>\n          <label htmlFor={ALL_ID.htmlFor} className={Styles.form__title}>\n            <h4>Fined contacts by name</h4>\n            <span className={Styles['form__input-wrap']}>\n              <input\n                className={Styles.form__input}\n                onChange={handleOnChange}\n                value={input}\n                autoComplete=\"off\"\n                name=\"input\"\n                type=\"text\"\n                placeholder=\"Input fined contacts\"\n              />\n              {input.length > 0 && (\n                <button\n                  type=\"button\"\n                  tabIndex={0}\n                  className={Styles.formInputBtn}\n                  onClick={handleOnClean}\n                >\n                  <i className=\"large material-icons\">clear</i>\n                </button>\n              )}\n            </span>\n          </label>\n        </form>\n      </section>\n    </CSSTransition>\n  );\n};\nFilter.propTypes = {\n  input: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import { connect } from 'react-redux';\nimport filterActions from '../../redux/filter/filterActions';\nimport * as selectors from '../../redux/selectors';\nimport Filter from './Filter';\n\nconst mapStateToProps = store => ({\n  input: selectors.getFilter(store),\n});\nconst mapDispatchToProps = {\n  handleChange: filterActions,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Styles from './ContactList.module.css';\nimport slide from '../../transition/slide.module.css';\nimport { saveToLocalStorage } from '../../services/localStorage';\nimport { MUTE_NUMBER } from '../../services/constants';\n\nconst removeWithLocalStorage = (contacts, id) => {\n  return contacts.filter(contact => contact.id !== id);\n};\nconst ContactList = ({ contacts, filterContacts, removeContact }) => {\n  const clickDelete = btnContact => {\n    const { id } = btnContact.currentTarget;\n    removeContact(id);\n    saveToLocalStorage('contacts', removeWithLocalStorage(contacts, id));\n  };\n\n  return (\n    <>\n      <TransitionGroup component=\"ul\" className={Styles.list}>\n        {filterContacts.map(contact => (\n          <CSSTransition\n            key={contact.id}\n            timeout={250}\n            unmountOnExit\n            classNames={slide}\n          >\n            <li key={contact.id} className={Styles.item}>\n              <div className={Styles['item-wrap']}>\n                <span className={Styles['item-name']}>{contact.name}:</span>\n                <span className={Styles['item-number']}>\n                  {MUTE_NUMBER(contact.number)}\n                </span>\n              </div>\n              <button\n                id={contact.id}\n                className={Styles.button}\n                type=\"button\"\n                onClick={clickDelete}\n              >\n                <i className=\"large material-icons\">backspace</i>\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n};\nContactList.propTypes = {\n  filterContacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts/contactsActions';\nimport * as selectors from '../../redux/selectors';\nimport ContactList from './ContactList';\n\nconst mapStateToProps = store => ({\n  filterContacts: selectors.getFilterContacts(store),\n  contacts: selectors.getContacts(store),\n});\nconst mapDispatchToProps = {\n  addContact: contactsActions.addContact,\n  removeContact: contactsActions.removeContact,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Styles from './Title.module.css';\nimport '../../transition/title-appear.css';\n\nconst Title = ({ animation, size, children }) => {\n  const styles = {\n    fontSize: `${size}px`,\n    padding: '10px 0',\n  };\n  return (\n    <>\n      {animation ? (\n        <CSSTransition in timeout={500} unmountOnExit classNames=\"title\" appear>\n          <div className={Styles.wrapTitle}>\n            <h3 style={styles}>{children}</h3>\n          </div>\n        </CSSTransition>\n      ) : (\n        <div className={Styles.wrapTitle}>\n          <h3 style={styles}>{children}</h3>\n        </div>\n      )}\n    </>\n  );\n};\nTitle.defaultProps = {\n  animation: false,\n};\nTitle.propTypes = {\n  animation: PropTypes.bool,\n  size: PropTypes.number.isRequired,\n  children: PropTypes.node.isRequired,\n};\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport pop from '../../transition/pop.module.css';\nimport Styles from './Notice.module.css';\n\nconst Notice = ({ children }) => {\n  return (\n    <CSSTransition in timeout={250} unmountOnExit classNames={pop}>\n      <div className={Styles.notice}>\n        <span className={Styles.notice__text}>{children}</span>\n      </div>\n    </CSSTransition>\n  );\n};\nNotice.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Notice;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactFormContainer from '../ContactForm/ContactFormContainer';\nimport FilterContainer from '../Filter/FilterContainer';\nimport ContactListContainer from '../ContactList/ContactListContainer';\nimport Styles from './App.module.css';\nimport Title from '../Title/Title';\nimport Notice from '../Notice/Notice';\nimport '../../transition/pnotify-style.css';\n\nconst App = ({ contactsLength, filterContactsLength }) => {\n  return (\n    <section className={Styles.section}>\n      <Title size={34} animation>\n        Phonebook\n      </Title>\n      <ContactFormContainer />\n      <Title size={24}>Contacts</Title>\n      {contactsLength > 0 && (\n        <>\n          {contactsLength > 1 && <FilterContainer />}\n          <ContactListContainer />\n        </>\n      )}\n      {contactsLength < 1 && <Notice>Contact list is empty!</Notice>}\n      {filterContactsLength < 1 && contactsLength > 0 && (\n        <Notice>Contact not found!</Notice>\n      )}\n    </section>\n  );\n};\nApp.propTypes = {\n  contactsLength: PropTypes.number.isRequired,\n  filterContactsLength: PropTypes.number.isRequired,\n};\nexport default App;\n","import { connect } from 'react-redux';\nimport '../../transition/pnotify-style.css';\nimport * as selectors from '../../redux/selectors';\nimport App from './App';\n\nconst mapStateToProps = store => ({\n  contactsLength: selectors.getContactsLength(store),\n  filterContactsLength: selectors.getFilterContactsLength(store),\n});\nexport default connect(mapStateToProps, null)(App);\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport types from './contactsTypes';\n\nconst initialState = [];\nconst contactsReducers = createReducer(initialState, {\n  [types.ADD_CONTACT]: (contacts, action) => {\n    return [...contacts, action.payload];\n  },\n  [types.REMOVE_CONTACT]: (contacts, action) => {\n    return contacts.filter(contact => contact.id !== action.payload);\n  },\n  [types.SET_CONTACTS_WITH_LOCAL_STORAGE]: (contacts, action) => {\n    return action.payload;\n  },\n});\nexport default contactsReducers;\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport types from './filterTypes';\n\nconst initialState = '';\nconst filterReducers = createReducer(initialState, {\n  [types.ON_CHANGE]: (state, action) => action.payload,\n});\nexport default filterReducers;\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducers from './contacts/contactsReducers';\nimport filterReducers from './filter/filterReducers';\n// import { applyMiddleware } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import logger from './middleware/logger';\n// import timeout from './middleware/timeout';\n// import throttle from './middleware/throttle';\n\n// const middleware = [logger, throttle, timeout];\n// const enhancer = composeWithDevTools(applyMiddleware(...middleware));\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducers,\n    filter: filterReducers,\n  },\n  // defaultEnhancers: enhancer,\n  devTools: process.env.NODE_ENV,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'pnotify/dist/PNotifyBrightTheme.css';\nimport AppContainer from './components/App/AppContainer';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}